{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["authService","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth","dbService","getFirestore","storageService","getStorage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","errorState","setErrorState","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","signInWithPopup","result","credentialFromResult","GithubAuthProvider","console","error","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","deleteDoc","doc","id","deleteObject","ref","attachmentUrl","toggleEditing","updateDoc","src","class","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","length","attachmentRef","uid","v4","uploadString","response","getDownloadURL","createdAt","Date","now","creatorId","displayName","addDoc","collection","maxLength","htmlFor","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","currentTarget","readAsDataURL","style","opacity","backgroundImage","Home","nweets","setNweets","useEffect","q","query","orderBy","onSnapshot","QuerySnapshot","newArray","docs","map","data","Profile","refreshUser","newDisplayName","setNewDisplayName","myNweets","setMyNweets","updateProfile","getMyNweets","where","getDocs","querySnapshot","forEach","push","autoFocus","marginTop","Navigation","history","useHistory","to","marginLeft","display","flexDirection","alignItems","fontSize","signOut","AppRouter","isLoggedIn","maxWidth","width","margin","justifyContent","exact","path","App","init","setInit","currentUser","setIsLoggedIn","setUserObject","onAuthStateChanged","user","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3bcb95e7.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getAuth, firebaseInstance } from \"firebase/auth\";\r\nimport \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { getStorage } from \"firebase/storage\";\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBbpa6sbf9-DR4TkBaMMtwf8UD66tPFXzE\",\r\n    authDomain: \"nwitter-da072.firebaseapp.com\",\r\n    projectId: \"nwitter-da072\",\r\n    storageBucket: \"nwitter-da072.appspot.com\",\r\n    messagingSenderId: \"1011547268461\",\r\n    appId: \"1:1011547268461:web:4d0e902345c8dfce322664\"\r\n  };\r\n\r\n  const app = initializeApp(firebaseConfig);\r\n\r\nexport const authService = getAuth();\r\nexport const auth = getAuth();\r\nexport const dbService = getFirestore();\r\nexport const storageService = getStorage();","import { createUserWithEmailAndPassword, signInWithEmailAndPassword} from \"@firebase/auth\";\r\n  import React, { useState } from \"react\";\r\n  import { authService } from \"../fbase\";\r\n  \r\n  const AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(false);\r\n    const [errorState, setErrorState] = useState(\"\");\r\n  \r\n    const onChange = (event) => {\r\n      const {\r\n        target: { name, value },\r\n      } = event;\r\n      if (name === \"email\") {\r\n        setEmail(value);\r\n      } else if (name === \"password\") {\r\n        setPassword(value);\r\n      }\r\n    };\r\n    const onSubmit = async (event) => {\r\n      event.preventDefault();\r\n      try {\r\n        if (newAccount) {\r\n          await createUserWithEmailAndPassword(authService, email, password);\r\n        } else {\r\n          await signInWithEmailAndPassword(authService, email, password);\r\n        }\r\n      } catch (error) {\r\n        setErrorState(error.message);\r\n      }\r\n    };\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  \r\n    return (\r\n      <>\r\n        <form onSubmit={onSubmit} className=\"container\">\r\n          <input\r\n            name=\"email\"\r\n            type=\"text\"\r\n            placeholder=\"Email\"\r\n            required\r\n            value={email}\r\n            onChange={onChange}\r\n            className=\"authInput\"\r\n          />\r\n          <input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            required\r\n            value={password}\r\n            onChange={onChange}\r\n            className=\"authInput\"\r\n          />\r\n          <span>{errorState}</span>\r\n          <input type=\"submit\" className=\"authInput authSubmit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\r\n        \r\n        </form>\r\n        <span onClick={toggleAccount} className=\"authSwitch\">\r\n          {newAccount ? \"Change to Sign In\" : \"Create Account\"}\r\n        </span>\r\n      </>\r\n    );\r\n  };\r\n  \r\n  export default AuthForm;","import React from \"react\";\r\nimport {\r\n    GithubAuthProvider,\r\n    GoogleAuthProvider,\r\n    signInWithPopup,\r\n  } from \"@firebase/auth\";\r\n  import AuthForm from \"../components/AuthForm\";\r\n  import { authService } from \"../fbase\";\r\n\r\n  \r\n  const Auth = () => {\r\n    const onSocialClick = async (event) => {\r\n      const {\r\n        target: { name },\r\n      } = event;\r\n      let provider;\r\n      try {\r\n        if (name === \"google\") {\r\n          provider = new GoogleAuthProvider();\r\n          const result = await signInWithPopup(authService, provider);\r\n          GoogleAuthProvider.credentialFromResult(result);\r\n        } else if (name === \"github\") {\r\n          provider = new GithubAuthProvider();\r\n          const result = await signInWithPopup(authService, provider);\r\n          GithubAuthProvider.credentialFromResult(result);\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n  \r\n    return (\r\n      <div className=\"authContainer\">\r\n        <AuthForm />\r\n        <div className=\"authBtns\">\r\n          <button name=\"google\" onClick={onSocialClick} className=\"authBtn\">\r\n            Sign In with Google\r\n          </button>\r\n          <button name=\"github\" onClick={onSocialClick} className=\"authBtn\">\r\n            Sign In GitHub\r\n          </button>\r\n       </div>\r\n       </div>\r\n    );\r\n  };\r\n  \r\n  export default Auth;","import { deleteDoc, doc, getFirestore, updateDoc } from \"@firebase/firestore\";\r\nimport { deleteObject, ref } from \"@firebase/storage\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst Nweet = ({nweetObj, isOwner}) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n        if (ok) {\r\n            await deleteDoc(doc(getFirestore(), `nweets/${nweetObj.id}`));\r\n            await deleteObject(ref(storageService, nweetObj.attachmentUrl));\r\n        }\r\n      };\r\n      const toggleEditing = () => setEditing((prev) => !prev);\r\n      \r\n      const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await updateDoc(doc(getFirestore(), `nweets/${nweetObj.id}`), {\r\n          text: newNweet,\r\n        });\r\n        setEditing(false);\r\n      };\r\n      const onChange =(event) => {\r\n          const {target:{value} , \r\n        } = event;\r\n        setNewNweet(value);\r\n      };\r\n\r\n    return (\r\n        <div className=\"nweet\">\r\n           {editing ? (\r\n               <>\r\n                <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                   <input\r\n                        type=\"text\"\r\n                        placeholder=\"Edit your nweet\"\r\n                        value={newNweet}\r\n                        required=\"required\"\r\n                        onChange={onChange}\r\n                        className=\"formInput\"/>\r\n                        <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\"/>\r\n                </form>\r\n                <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n            Cancel\r\n          </span>\r\n               </>\r\n           ) : (\r\n               <>\r\n               <h4>{nweetObj.text}</h4>\r\n               {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n               {isOwner && (\r\n                   <div class=\"nweet__actions\">\r\n\r\n                        <button onClick={onDeleteClick}>Delete</button>\r\n                        <span> </span>\r\n                        <button onClick={toggleEditing}>Edit</button>\r\n                   </div>\r\n                   \r\n                   )}\r\n                </>\r\n           )}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Nweet;","import { addDoc, collection } from \"@firebase/firestore\";\r\nimport { getDownloadURL, ref, uploadString } from \"@firebase/storage\";\r\nimport { useState } from \"react\";\r\nimport { v4 } from \"uuid\";\r\nimport { dbService, storageService } from \"../fbase\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (nweet.length === 0) {\r\n      return null;\r\n    }\r\n    try {\r\n      let attachmentUrl = \"\";\r\n      if (attachment !== \"\") {\r\n        const attachmentRef = ref(storageService, `${userObj.uid}/${v4()}`);\r\n        const response = await uploadString(\r\n          attachmentRef,\r\n          attachment,\r\n          \"data_url\"\r\n        );\r\n        attachmentUrl = await getDownloadURL(response.ref);\r\n      }\r\n      const nweetObj = {\r\n        text: nweet,\r\n        createdAt: Date.now(),\r\n        creatorId: userObj.uid,\r\n        attachmentUrl,\r\n        displayName: userObj.displayName,\r\n      };\r\n      await addDoc(collection(dbService, \"nweets\"), nweetObj);\r\n    } catch (error) {\r\n      console.error(\"Error adding document: \", error);\r\n    }\r\n    setNweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNweet(value);\r\n  };\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n  const onClearAttachment = () => setAttachment(null);\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n      <input\r\n      className=\"factoryInput__input\"\r\n        value={nweet}\r\n        onChange={onChange}\r\n        type=\"text\"\r\n        placeholder=\"Share your thoughts!\"\r\n        maxLength={500}\r\n      />\r\n      <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n          <span>Add Photos</span>\r\n        <input type=\"submit\" value=\"SEND\" />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NweetFactory;","import { collection, onSnapshot, orderBy, query } from \"@firebase/firestore\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Nweet from \"../components/Nweet\";\r\nimport NweetFactory from \"../components/NweetFactory\";\r\nimport { dbService } from \"../fbase\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [nweets, setNweets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const q = query(\r\n      collection(dbService, \"nweets\"),\r\n      orderBy(\"createdAt\", \"desc\")\r\n    );\r\n    onSnapshot(q, (QuerySnapshot) => {\r\n      const newArray = QuerySnapshot.docs.map((doc) => {\r\n        return { id: doc.id, ...doc.data() };\r\n      });\r\n      setNweets(newArray);\r\n    });\r\n  }, []);\r\n  // useEffect(function moveScrollBottom() {\r\n  //   const outWindow = document.getElementById(\"OutWindow\");\r\n  //   const newScrollTop = outWindow.scrollTopMax;\r\n  //   outWindow.scrollTop = newScrollTop;\r\n  // });\r\n\r\n  return (\r\n        <>\r\n      <div className=\"container\">\r\n        {nweets.map((nweet) => (\r\n          <Nweet\r\n            key={nweet.id}\r\n            nweetObj={nweet}\r\n            isOwner={nweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n      <NweetFactory userObj={userObj} />\r\n      </>\r\n    \r\n  );\r\n};\r\n\r\nexport default Home;","import { updateProfile } from \"@firebase/auth\";\r\nimport { collection, getDocs, query, where } from \"@firebase/firestore\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Nweet from \"../components/Nweet\";\r\nimport { dbService } from \"../fbase\";\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const [myNweets, setMyNweets] = useState();\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await updateProfile(userObj, { displayName: newDisplayName });\r\n    }\r\n    refreshUser();\r\n  };\r\n\r\n  const getMyNweets = async () => {\r\n    const q = query(\r\n      collection(dbService, \"nweets\"),\r\n      where(\"creatorId\", \"==\", userObj.uid)\r\n    );\r\n\r\n    const querySnapshot = await getDocs(q);\r\n    let newArray = [];\r\n    querySnapshot.forEach((doc) => {\r\n      return newArray.push(doc.data());\r\n    });\r\n    setMyNweets(newArray);\r\n  };\r\n  useEffect(() => {\r\n    getMyNweets();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <label>Nickname</label>\r\n        <div>\r\n          <input\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            autoFocus\r\n            placeholder=\"Nickname\"\r\n            value={newDisplayName}\r\n            className=\"formInput\"\r\n          />\r\n          <input type=\"submit\" value=\"Update Profile\" className=\"formBtn\" style={{\r\n            marginTop: 10,\r\n          }}/>\r\n        </div>\r\n      </form>\r\n      \r\n        <h3>My Nweets</h3>\r\n        {myNweets?.map((nweet) => (\r\n          <Nweet\r\n            key={nweet.createdAt}\r\n            nweetObj={nweet}\r\n            isOwner={nweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      \r\n   </div>\r\n  );\r\n};\r\n\r\nexport default Profile;","import { authService } from \"fbase\";\r\nimport React from \"react\";\r\nimport {Link} from \"react-router-dom\"\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n    const history = useHistory();\r\n    const onLogOutClick = () => {\r\n      authService.signOut();\r\n      history.push(\"/\");\r\n    };\r\n    return (\r\n            <>\r\n            <Link to=\"/profile\"\r\n            style={{\r\n              marginLeft: 10,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              fontSize: 12,\r\n            }}>\r\n              {userObj?.displayName\r\n                ? `${userObj.displayName}'s Profile`\r\n                : \"My Profile\"}\r\n            </Link>\r\n          <br/>\r\n            <Link to=\"/\">Home</Link>\r\n            <button className=\"navBt\" onClick={onLogOutClick}>Log out</button>\r\n       </>\r\n      \r\n    );\r\n  };\r\n  export default Navigation;","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Profile from \"../routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n  return (\r\n      <Router>\r\n        {isLoggedIn && <Navigation userObj={userObj} />}\r\n        <Switch>\r\n          {isLoggedIn ? (\r\n            <div\r\n            style={{\r\n              maxWidth: 890,\r\n              width: \"100%\",\r\n              margin: \"0 auto\",\r\n              marginTop: 80,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n              <Route exact path=\"/\">\r\n                  <Home userObj={userObj} />\r\n              </Route>\r\n              <Route path=\"/profile\">\r\n                  <Profile refreshUser={refreshUser} userObj={userObj} />\r\n              </Route>\r\n            </div>\r\n          ) : (\r\n            <Route exact path=\"/\">\r\n                <Auth />\r\n            </Route>\r\n          )}\r\n        </Switch>\r\n      </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;","import { useEffect, useState } from \"react\";\nimport AppRouter from \"./Router\";\nimport { authService } from \"../fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(authService.currentUser);\n  const [userObj, setUserObject] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoggedIn(true);\n        setUserObject(user);\n      } else {\n        setIsLoggedIn(false);\n        setUserObject(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObject({ ...user });\n    setUserObject(user);\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={isLoggedIn}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}